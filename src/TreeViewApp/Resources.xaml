<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TreeViewApp"
                    xmlns:viewModels="clr-namespace:TreeViewApp.ViewModels.V2">


    <local:TreeViewMoveLeftConverter x:Key="TreeViewMoveLeftConverter"/>
    <local:TreeViewMoveRightConverter x:Key="TreeViewMoveRightConverter"/>


    <DataTemplate x:Key="ItemTemplate" DataType="{x:Type viewModels:Item}">
        <Border>
            <TextBlock Margin="20,0,0,0" Text="{Binding Name}"/>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVisible}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter Property="Background" Value="PowderBlue"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding SelectCommand}"/>
            </Border.InputBindings>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="CategoryTemplate" DataType="{x:Type viewModels:Category}">
        <StackPanel Orientation="Vertical">

            <Border>
                <TextBlock Text="{Binding Name}"/>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                <Setter Property="Background" Value="PowderBlue"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding SelectCommand}"/>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenCloseCommand}"/>
                </Border.InputBindings>
            </Border>

            <ItemsControl ItemsSource="{Binding Items, Mode=OneWay}" ItemTemplate="{StaticResource ItemTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>


    <DataTemplate x:Key="ItemTemplateSearchMode" DataType="{x:Type viewModels:Item}">
        <Border>
            <TextBlock Margin="20,0,0,0" Text="{Binding Name}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSearchResult}" Value="true">
                                <Setter Property="Foreground" Value="Green"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVisible}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter Property="Background" Value="PowderBlue"></Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSearchResult}" Value="false"/>
                                <Condition Binding="{Binding IsHostingSearchResult}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding SelectCommand}"/>
            </Border.InputBindings>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="CategoryTemplateSearchMode" DataType="{x:Type viewModels:Category}">
        <StackPanel Orientation="Vertical">

            <Border>
                <TextBlock Text="{Binding Name}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSearchResult}" Value="true">
                                    <Setter Property="Foreground" Value="Green"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                <Setter Property="Background" Value="PowderBlue"></Setter>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSearchResult}" Value="false"/>
                                    <Condition Binding="{Binding IsHostingSearchResult}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding SelectCommand}"/>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenCloseCommand}"/>
                </Border.InputBindings>
            </Border>

            <ItemsControl ItemsSource="{Binding Items, Mode=OneWay}" ItemTemplate="{StaticResource ItemTemplateSearchMode}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>





    <HierarchicalDataTemplate DataType="{x:Type viewModels:Category}"
                              ItemsSource="{Binding Path=Items}">
        <TextBlock Text="{Binding Name}"/>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type viewModels:Item}"
                              ItemsSource="{Binding Path=Items}">
        <TextBlock Text="{Binding Name}"/>
    </HierarchicalDataTemplate>


    <SolidColorBrush x:Key="TreeViewItemMouseOverColor" Color="#E5F3FF"/>
    <SolidColorBrush x:Key="TreeViewItemSelectedColor" Color="#CDE8FF"/>
    <SolidColorBrush x:Key="TreeViewItemSelectedNotActiveColor" Color="#D9D9D9"/>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel Orientation="Vertical">
                        <!--Отодвигаем границу элемента влево, чтобы компенсировать сдвиг, заданный для ItemsPresenter
                        Нужно для того, что "кликабельный" фон элемента начинался с левого края окна
                        В дальнейшем содержимое элемента нужно вернуть на место-->
                        <Border x:Name="ItemBorder" 
                                Padding="2" 
                                Margin="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, 
                            Converter={StaticResource TreeViewMoveLeftConverter}}">

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource TreeViewItemMouseOverColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <DockPanel >
                                <!--Возвращаем содержимое элемента на место--> 
                                <ContentPresenter ContentSource="Header"
                                                  Margin="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}},
                                    Converter={StaticResource TreeViewMoveRightConverter}}"/>
                            </DockPanel>
                        </Border>
                        <ItemsPresenter 
                            Margin="20,0,0,0"
                            x:Name="ItemsHost"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource TreeViewItemSelectedColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource TreeViewItemSelectedNotActiveColor}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>